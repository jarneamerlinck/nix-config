{
  lib,
  ...
}:
{

  # Containers

  virtualisation.oci-containers.containers."calibre-server" = {
    image = "lscr.io/linuxserver/calibre:8.9.0";
    environment = {
      "TZ" = "Europe/Brussels";
      "UMASK" = "022";
      "DOCKER_MODS" = "linuxserver/calibre-web:calibre";
    };

    volumes = [
      "/data/docker/calibre/server_config:/config"
      "/data/docker/calibre/library:/books"
    ];

    # ports = [
    #   "8083:8083/tcp"
    # ];
    labels = {
      "traefik.enable" = "true";
      "traefik.http.routers.calibre-rtr.entrypoints" = "https";
      "traefik.http.routers.calibre-rtr.rule" = "Host(`books.ko0.net`)";
      "traefik.http.routers.calibre-rtr.service" = "calibre-svc";
      "traefik.http.routers.calibre-rtr.tls" = "true";
      "traefik.http.routers.calibre-rtr.tls.certresolver" = "cloudflare";
      "traefik.http.services.calibre-svc.loadbalancer.server.port" = "8080";
    };
    log-driver = "journald";
    extraOptions = [
      "--network-alias=calibre"
      "--network=frontend"
      "--security-opt=no-new-privileges:true"
    ];
  };
  systemd.services."docker-calibre-server" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "no";
    };
    after = [
      # "docker-network-frontend.service"
    ];
    requires = [
      # "docker-network-frontend.service"
    ];
    partOf = [
      "docker-compose-calibre-root.target"
    ];
    wantedBy = [
      "docker-compose-calibre-root.target"
    ];
  };

  virtualisation.oci-containers.containers."calibre-web" = {
    image = "lscr.io/linuxserver/calibre-web:0.6.24";
    environment = {
      "TZ" = "Europe/Brussels";
      "DOCKER_MODS" = "linuxserver/calibre-web:calibre";
    };

    volumes = [
      "/data/docker/calibre/config:/config"
      "/data/docker/calibre/server_config/Calibre Library:/books"
    ];
    labels = {
      "traefik.enable" = "true";
      "traefik.http.routers.calibreweb-rtr.entrypoints" = "https";
      "traefik.http.routers.calibreweb-rtr.rule" = "Host(`ebooks.ko0.net`)";
      "traefik.http.routers.calibreweb-rtr.service" = "calibreweb-svc";
      "traefik.http.routers.calibreweb-rtr.tls" = "true";
      "traefik.http.routers.calibreweb-rtr.tls.certresolver" = "cloudflare";
      "traefik.http.services.calibreweb-svc.loadbalancer.server.port" = "8083";
    };
    log-driver = "journald";
    extraOptions = [
      "--network-alias=calibre"
      "--network=frontend"
      "--security-opt=no-new-privileges:true"
    ];
  };

  systemd.services."docker-calibre" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "no";
    };
    after = [
      "docker-network-frontend.service"
    ];
    requires = [
      "docker-network-frontend.service"
    ];
    partOf = [
      "docker-compose-calibre-root.target"
    ];
    wantedBy = [
      "docker-compose-calibre-root.target"
    ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-calibre-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
}
