{ pkgs, lib, config, ... }:
{
  
  # Containers
  virtualisation.oci-containers.containers."calibre" = {
  image = "lscr.io/linuxserver/calibre-web:0.6.24";
    environment = {
      "TZ" = "Europe/Brussels";
      "DOCKER_MODS"="linuxserver/calibre-web:calibre";
    };

    volumes = [
      "/data/docker/calibre/config:/config"
      "/data/docker/calibre/library:/books"
    ];
    labels = {
      "traefik.enable"="true";
      "traefik.http.routers.calibre.rule"="Host(`ebooks.ko0.net`)";
      "traefik.http.routers.calibre.entrypoints"="websecure";
      "traefik.http.routers.calibre.tls.certresolver"="cloudflare"; 
      "traefik.http.routers.calibre.tls"="true";
      "traefik.http.services.calibre.loadbalancer.server.port"="8083";
    };
    log-driver = "journald";
    extraOptions = [
      "--network-alias=calibre"
      "--network=frontend"
    ];
  };
  systemd.services."docker-calibre" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "no";
    };
    after = [
      # "docker-network-frontend.service"
    ];
    requires = [
      # "docker-network-frontend.service"
    ];
    partOf = [
      "docker-compose-calibre-root.target"
    ];
    wantedBy = [
      "docker-compose-calibre-root.target"
    ];
  };

  # Networks
  # systemd.services."docker-network-frontend" = {
  #   path = [ pkgs.docker ];
  #   serviceConfig = {
  #     Type = "oneshot";
  #     RemainAfterExit = true;
  #     ExecStop = "docker network rm -f frontend";
  #   };
  #   script = ''
  #     docker network inspect frontend || docker network create calibre_default
  #   '';
  #   partOf = [ "docker-compose-calibre-root.target" ];
  #   wantedBy = [ "docker-compose-calibre-root.target" ];
  # };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-calibre-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
}
